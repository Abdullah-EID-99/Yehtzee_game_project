/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Yehtzee_game_project;

import game.Message;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class Game extends javax.swing.JFrame {
    int rollCount = 0;
    Client me;
    int dices[];
    JLabel[] myLabels = new JLabel[5];
    JLabel[] middle_labeles = new JLabel[5];
    JLabel[] rivalLabels = new JLabel[5];
    JCheckBox dices_checkBoxes[] = new JCheckBox[5];
    DefaultTableModel tableModel = new DefaultTableModel();

    static void clearLabeles(JLabel labeles[]) {
        for (int q = 0; q < labeles.length; q++) {
            labeles[q].setIcon(null);
        }
    }

    static void setVisibleCheckBoxes(JCheckBox checkBoxes[], boolean isVisible) {
        for (int q = 0; q < checkBoxes.length; q++) {
            checkBoxes[q].setVisible(isVisible);
        }
    }

    void setEnable() {
        rollDice_btn.setEnabled(true);
        messge_txt_field.setEnabled(true);
        send_message_btn.setEnabled(true);
    }

    ArrayList<Integer> checkIfCheckBoxIsSelected() {
        ArrayList<Integer> arr = new ArrayList<>();
        for (int i = 0; i < dices_checkBoxes.length; i++) {
            if (dices_checkBoxes[i].isSelected()) {
                arr.add(i);
            }
        }
        return arr;
    }
    void clearCheckBoxSelection(){
        for (JCheckBox checkBox : dices_checkBoxes) {
            checkBox.setSelected(false);
        }
    }

    public Game() {
        initComponents();
        Yehtzee.startGame();

        myLabels[0] = dice_1;
        myLabels[1] = dice_2;
        myLabels[2] = dice_3;
        myLabels[3] = dice_4;
        myLabels[4] = dice_5;
        rivalLabels[0] = rival_dice_1;
        rivalLabels[1] = rival_dice_2;
        rivalLabels[2] = rival_dice_3;
        rivalLabels[3] = rival_dice_4;
        rivalLabels[4] = rival_dice_5;
        middle_labeles[0] = dice_6;
        middle_labeles[1] = dice_7;
        middle_labeles[2] = dice_8;
        middle_labeles[3] = dice_9;
        middle_labeles[4] = dice_10;
        dices_checkBoxes[0] = CheckBox_6;
        dices_checkBoxes[1] = CheckBox_7;
        dices_checkBoxes[2] = CheckBox_8;
        dices_checkBoxes[3] = CheckBox_9;
        dices_checkBoxes[4] = CheckBox_10;
        setVisibleCheckBoxes(dices_checkBoxes, false);
        tableModel.setColumnIdentifiers(new String[]{"Type", "player1", "player2"});
        List<String> scoreTypes = Yehtzee.readFile("src/yehtzee/yeht.txt");
        for (String scoreType : scoreTypes) {
            tableModel.addRow(new String[]{scoreType, null, null});
        }
        scoreTable.setModel(tableModel);
        Random rn = new Random();
        for (int q = 0; q < myLabels.length; q++) {
            BufferedImage img = null;
            try {
                //img = ImageIO.read(new File("src/Yehtzee_game_project/dice_" + (rn.nextInt(6) + 1) + ".png"));
                img = ImageIO.read(new File("src/Yehtzee_game_project/dice_" + (6) + ".png"));
            } catch (IOException e) {
                e.printStackTrace();
            }
            Image dimg = img.getScaledInstance(dice_5.getWidth(), dice_5.getHeight(),
                    Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(dimg);
            myLabels[q].setIcon(icon);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        scoreTable = new javax.swing.JTable();
        rollDice_btn = new javax.swing.JButton();
        dice_1 = new javax.swing.JLabel();
        dice_2 = new javax.swing.JLabel();
        dice_4 = new javax.swing.JLabel();
        dice_5 = new javax.swing.JLabel();
        dice_3 = new javax.swing.JLabel();
        dice_6 = new javax.swing.JLabel();
        dice_7 = new javax.swing.JLabel();
        dice_8 = new javax.swing.JLabel();
        dice_9 = new javax.swing.JLabel();
        dice_10 = new javax.swing.JLabel();
        CheckBox_10 = new javax.swing.JCheckBox();
        CheckBox_6 = new javax.swing.JCheckBox();
        CheckBox_7 = new javax.swing.JCheckBox();
        CheckBox_8 = new javax.swing.JCheckBox();
        CheckBox_9 = new javax.swing.JCheckBox();
        rival_name_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name_txt_field = new javax.swing.JTextField();
        start_btn = new javax.swing.JButton();
        send_message_btn = new javax.swing.JButton();
        messge_txt_field = new javax.swing.JTextField();
        recieved_message_label = new javax.swing.JLabel();
        rival_dice_1 = new javax.swing.JLabel();
        rival_dice_2 = new javax.swing.JLabel();
        rival_dice_4 = new javax.swing.JLabel();
        rival_dice_5 = new javax.swing.JLabel();
        rival_dice_3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        scoreTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scoreTable.setEnabled(false);
        scoreTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                scoreTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(scoreTable);

        rollDice_btn.setText("Roll Dice");
        rollDice_btn.setEnabled(false);
        rollDice_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollDice_btnActionPerformed(evt);
            }
        });

        dice_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yehtzee/die-face.png"))); // NOI18N

        dice_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yehtzee/die-face.png"))); // NOI18N

        dice_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yehtzee/die-face.png"))); // NOI18N

        dice_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yehtzee/die-face.png"))); // NOI18N

        dice_3.setBackground(new java.awt.Color(255, 255, 255));
        dice_3.setForeground(new java.awt.Color(255, 255, 255));
        dice_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yehtzee/die-face.png"))); // NOI18N
        dice_3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        dice_8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice_8MouseClicked(evt);
            }
        });

        jLabel2.setText("Name: ");

        start_btn.setText("Start");
        start_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_btnActionPerformed(evt);
            }
        });

        send_message_btn.setText("send mesg");
        send_message_btn.setEnabled(false);
        send_message_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_message_btnActionPerformed(evt);
            }
        });

        messge_txt_field.setEnabled(false);

        rival_dice_3.setBackground(new java.awt.Color(255, 255, 255));
        rival_dice_3.setForeground(new java.awt.Color(255, 255, 255));
        rival_dice_3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(rival_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rival_dice_1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rival_dice_2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rival_dice_3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rival_dice_4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(dice_6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(dice_7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(dice_8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(CheckBox_6)
                                .addGap(85, 85, 85)
                                .addComponent(CheckBox_7)
                                .addGap(75, 75, 75)
                                .addComponent(CheckBox_8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(dice_9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(dice_10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addComponent(rival_dice_5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(CheckBox_9)
                        .addGap(85, 85, 85)
                        .addComponent(CheckBox_10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(dice_1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dice_2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dice_3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dice_4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dice_5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(messge_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(send_message_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(rollDice_btn)
                        .addGap(216, 216, 216)
                        .addComponent(recieved_message_label, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addComponent(name_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(start_btn)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rival_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rival_dice_1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rival_dice_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rival_dice_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rival_dice_4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dice_6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dice_7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dice_8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckBox_6)
                            .addComponent(CheckBox_7)
                            .addComponent(CheckBox_8))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dice_9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dice_10, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(rival_dice_5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckBox_9)
                    .addComponent(CheckBox_10))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dice_1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice_3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice_4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice_5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(messge_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(send_message_btn)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recieved_message_label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rollDice_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(name_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(start_btn)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//    public static Socket socket;
//
//    //verileri almak için gerekli nesne
//    public static ObjectInputStream sInput;
//    //verileri göndermek için gerekli nesne
//    public static ObjectOutputStream sOutput;
    static Thread myThread;
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        me.Send(null, Message.Message_Type.Disconnect);
        myThread.stop();
        me.Stop();
    }//GEN-LAST:event_formWindowClosing

    private void start_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_btnActionPerformed

        rival_name_label.setText("waiting for rival ...");
        myThread = new Thread(() -> {

            me = new Client();
            me.Start("localhost", 2000);
            me.Send(name_txt_field.getText(), Message.Message_Type.Name);
            //                // Client Soket nesnesi
            //                socket = new Socket("localhost", 2000);
            //                System.out.println("Servera bağlandı");
            //                // input stream
            //                sInput = new ObjectInputStream(socket.getInputStream());
            //                // output stream
            //                sOutput = new ObjectOutputStream(socket.getOutputStream());
            //
            //                //ilk mesaj olarak isim gönderiyorum
            //                Message msg = new Message(Message.Message_Type.Name);
            //                msg.content = name_txt_field.getText();
            //                sOutput.writeObject(msg);
            //soket bağlı olduğu sürece dön
            start_btn.setEnabled(false);
            name_txt_field.setEnabled(false);
            while (me.socket.isConnected()) {
                try {
                    //mesaj gelmesini bloking olarak dinyelen komut
                    Message received = (Message) (me.sInput.readObject());
                    //mesaj gelirse bu satıra geçer
                    //mesaj tipine göre yapılacak işlemi ayır.
                    switch (received.type) {
                        case Name:
                            break;
                        case RivalConnected:
                            String rivalName = received.content.toString();
                            rival_name_label.setText(rivalName);
                            tableModel.setColumnIdentifiers(new String[]{"", name_txt_field.getText(), rivalName});
                            messge_txt_field.setEnabled(true);
                            send_message_btn.setEnabled(true);

                            break;
                        case Disconnect:
                            break;
                        case Text:
                            String d = received.content.toString();
                            recieved_message_label.setText(d);
                            break;
                        case SelectedScore:
                            Integer rivalSelectedScore[] = (Integer[]) received.content;
                            System.out.println("score " + rivalSelectedScore[1]);
                            tableModel.setValueAt(rivalSelectedScore[1], rivalSelectedScore[0], 2);
                            break;
                        case start:
                            boolean start = (boolean) received.content;
                            if (start) {
                                if (dice_1.getIcon() == null) {
                                    for (int i = 0; i < myLabels.length; i++) {
                                        myLabels[i].setIcon(middle_labeles[i].getIcon());
                                    }
                                    clearLabeles(middle_labeles);
                                }
                                rollDice_btn.setEnabled(true);
                            } else {
                                for (int i = 0; i < rivalLabels.length; i++) {
                                    rivalLabels[i].setIcon(myLabels[i].getIcon());
                                }
                                clearLabeles(myLabels);
                            }
                            break;
                        case dices:
                            int dices[] = (int[]) received.content;
                            clearLabeles(rivalLabels);
                            Yehtzee.loadIconToLabel(middle_labeles, dices);
                            break;

                    }

                } catch (IOException ex) {

                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                    //Client.Stop();
                    break;
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                    //Client.Stop();
                    break;
                }
            }
        });
        myThread.start();
    }//GEN-LAST:event_start_btnActionPerformed

    private void scoreTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scoreTableMousePressed
        // TODO add your handling code here:
        scoreTable.setColumnSelectionAllowed(true);
        int row = scoreTable.getSelectedRow();
        int column = scoreTable.getSelectedColumn();
        if (row != -1 && column == 1 && Yehtzee.scores[row] == -1) {
            if (JOptionPane.showConfirmDialog(this, "are you sure you want this score?") == JOptionPane.OK_OPTION) {
                tableModel.setValueAt(Yehtzee.temp_scores[row], row, 1);
                Yehtzee.scores[row] = Yehtzee.temp_scores[row];
                Integer score[] = new Integer[2];
                score[0] = row;
                score[1] = Yehtzee.temp_scores[row];
                me.Send(score, Message.Message_Type.SelectedScore);
                rollDice_btn.setEnabled(false);
                scoreTable.setEnabled(false);
                scoreTable.clearSelection();
                for (int i = 0; i < Yehtzee.scores.length; i++) {
                    if (Yehtzee.scores[i] == -1) {
                        tableModel.setValueAt(0, i, 1);
                    }
                }
                for (int i = 0; i < rivalLabels.length; i++) {
                    rivalLabels[i].setIcon(middle_labeles[i].getIcon());
                }
                clearLabeles(middle_labeles);
                setVisibleCheckBoxes(dices_checkBoxes, false);
                rollDice_btn.setEnabled(false);

                me.Send(true, Message.Message_Type.start);
                rollCount = 0;
            }
        }
    }//GEN-LAST:event_scoreTableMousePressed

    private void dice_8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice_8MouseClicked
        // TODO add your handling code here:
        myLabels[8 - myLabels.length].setIcon(middle_labeles[8 - 6].getIcon());
        middle_labeles[8 - 6].setIcon(null);
    }//GEN-LAST:event_dice_8MouseClicked

    private void rollDice_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollDice_btnActionPerformed
        // TODO add your handling code here:
        if (rollCount == 0) {
            scoreTable.setEnabled(true);
            setVisibleCheckBoxes(dices_checkBoxes, true);
        }
        if (rollCount <= 2) {
            if (checkIfCheckBoxIsSelected().size()>0) {
                this.dices = Yehtzee.rollSpecificDices(dices, checkIfCheckBoxIsSelected(), middle_labeles);
                Yehtzee.loadIconToLabel(middle_labeles, dices);
                this.clearCheckBoxSelection();
            } else {
                this.dices = Yehtzee.rollDice(middle_labeles);
            }
            me.Send(dices, Message.Message_Type.dices);
            Yehtzee.play(dices);
            for (int i = 0; i < Yehtzee.temp_scores.length; i++) {
                if (Yehtzee.scores[i] == -1) {
                    tableModel.setValueAt(Yehtzee.temp_scores[i], i, 1);
                }
            }
            Yehtzee.printArray(dices);
            //Yehtzee.printScore();
            Yehtzee.printArray(Yehtzee.upperSectionCombinations);

            clearLabeles(myLabels);
            rollCount++;
        } else {
            rollDice_btn.setEnabled(false);
        }
    }//GEN-LAST:event_rollDice_btnActionPerformed

    private void send_message_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_message_btnActionPerformed
        // TODO add your handling code here:
        //        Message msg = new Message(Message.Message_Type.Text);
        //        msg.content = messge_txt.getText();
        //        try {
        //            sOutput.writeObject(msg);
        //        } catch (IOException ex) {
        //            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        //        }
        me.Send(messge_txt_field.getText(), Message.Message_Type.Text);
    }//GEN-LAST:event_send_message_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox_10;
    private javax.swing.JCheckBox CheckBox_6;
    private javax.swing.JCheckBox CheckBox_7;
    private javax.swing.JCheckBox CheckBox_8;
    private javax.swing.JCheckBox CheckBox_9;
    private javax.swing.JLabel dice_1;
    private javax.swing.JLabel dice_10;
    private javax.swing.JLabel dice_2;
    private javax.swing.JLabel dice_3;
    private javax.swing.JLabel dice_4;
    private javax.swing.JLabel dice_5;
    private javax.swing.JLabel dice_6;
    private javax.swing.JLabel dice_7;
    private javax.swing.JLabel dice_8;
    private javax.swing.JLabel dice_9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messge_txt_field;
    private javax.swing.JTextField name_txt_field;
    private javax.swing.JLabel recieved_message_label;
    private javax.swing.JLabel rival_dice_1;
    private javax.swing.JLabel rival_dice_2;
    private javax.swing.JLabel rival_dice_3;
    private javax.swing.JLabel rival_dice_4;
    private javax.swing.JLabel rival_dice_5;
    private javax.swing.JLabel rival_name_label;
    private javax.swing.JButton rollDice_btn;
    private javax.swing.JTable scoreTable;
    private javax.swing.JButton send_message_btn;
    private javax.swing.JButton start_btn;
    // End of variables declaration//GEN-END:variables
}
